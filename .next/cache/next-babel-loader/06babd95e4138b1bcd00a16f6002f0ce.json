{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AddAlert } from \"@material-ui/icons\";\nimport { useCreateStore, useProvider } from \"mobx-store-provider\";\nimport AlertComponent from \"../components/Alert\";\nimport Header from \"../components/Header\";\nimport NavigationPanel from '../components/NavigationPanel';\nimport menuStore from '../stores/menu-store';\nimport postsStore from '../stores/posts-store';\nimport alertStore from '../stores/alert-store';\nimport user from '../stores/user-store';\nimport '../styles/globals.css';\nimport useCookie from 'react-use-cookie';\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const [userToken, setUserToken] = useCookie('token');\n  user.setToken(userToken);\n  const appStore = useCreateStore(() => ({\n    menu: menuStore,\n    postsStore,\n    alert: alertStore,\n    user: user\n  }));\n\n  if (user.userToken) {\n    let client = new W3CWebSocket('ws://localhost:5001/', 'echo-protocol');\n\n    client.onerror = function () {};\n\n    client.onmessage = function (e) {\n      if (typeof e.data === 'string') {\n        alertStore.showAlert(JSON.parse(e.data));\n      }\n    };\n  }\n\n  const Provider = useProvider();\n  return /*#__PURE__*/_jsxs(Provider, {\n    value: appStore,\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(AlertComponent, {}), /*#__PURE__*/_jsx(NavigationPanel, {}), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n  });\n};\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}