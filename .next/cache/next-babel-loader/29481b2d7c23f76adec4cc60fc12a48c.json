{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { observer } from 'mobx-react';\nimport { useStore } from \"mobx-store-provider\";\nimport TextField from '@material-ui/core/TextField';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nconst EditPost = () => {\n  const {\n    postsStore\n  } = useStore();\n  const router = useRouter();\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    newsTitle: '',\n    newsContent: '',\n    tabTitle: '',\n    tabDesc: '',\n    longDesc: '',\n    img: ''\n  });\n  useEffect(async () => {\n    const response = await fetch('/api/news/page', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        id: router.query.url\n      })\n    });\n    const postData = await response.json();\n    setFormValues(_objectSpread({}, postData));\n  }, [router.query.url]);\n\n  const onChangeHandler = e => {\n    setFormValues(values => _objectSpread(_objectSpread({}, values), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(formValues);\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsx(TextField, {\n      id: \"outlined-basic\",\n      label: \"Outlined\",\n      variant: \"outlined\",\n      fullWidth: true,\n      onChange: onChangeHandler,\n      value: formValues.newsTitle,\n      name: \"newsTitle\"\n    }), /*#__PURE__*/_jsx(TextField, {\n      id: \"outlined-basic\",\n      label: \"Outlined\",\n      variant: \"outlined\",\n      fullWidth: true,\n      onChange: onChangeHandler,\n      value: formValues.newsContent,\n      name: \"newsContent\",\n      multiline: true\n    })]\n  });\n};\n\nexport default observer(EditPost);","map":null,"metadata":{},"sourceType":"module"}