{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport NewsCard from \"./NewsCard\";\nimport { useInView } from 'react-intersection-observer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useState } from \"react\";\nimport useCookie from 'react-use-cookie';\n\nconst LikedNews = () => {\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0\n  });\n  const {\n    0: likedNews,\n    1: setLikedNews\n  } = useState([]);\n  const [posts, setPosts] = useCookie('likedPosts');\n  const {\n    0: load,\n    1: setLoad\n  } = useState(false);\n  let page = 0;\n\n  const loadData = async () => {\n    if (posts) {\n      let cookiePosts = JSON.parse(posts);\n      console.log(cookiePosts);\n\n      if (!load) {\n        setLoad(true);\n        const currentPosts = cookiePosts.slice(page * 10, page * 10 + 10);\n        const response = await fetch('/api/news/likedNews', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n          },\n          body: JSON.stringify(currentPosts)\n        });\n        const json = await response.json();\n        setPosts(posts => setPosts([...posts, ...json]));\n        setLoad(false);\n      }\n    }\n  };\n\n  if (inView) loadData();\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      spacing: 3,\n      container: true,\n      children: likedNews.map(post => /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        sm: 6,\n        children: /*#__PURE__*/_jsx(NewsCard, {\n          post: post\n        })\n      }, post.url))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        paddingTop: \"15px\"\n      },\n      children: load ? /*#__PURE__*/_jsx(CircularProgress, {}) : \"\"\n    })]\n  });\n};\n\nexport default LikedNews;","map":null,"metadata":{},"sourceType":"module"}