{"ast":null,"code":"var _dec, _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, computed, action } from 'mobx';\nlet MenuStore = (_dec = action('toggle left panel'), (_class = (_temp = class MenuStore {\n  constructor() {\n    _initializerDefineProperty(this, \"show\", _descriptor, this);\n\n    this.show = true;\n  }\n\n  get isOpenLeftPanel() {\n    return this.show;\n  }\n\n  toggleLeftPanel() {\n    this.show = !this.show;\n    console.log(this.show);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"show\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"isOpenLeftPanel\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isOpenLeftPanel\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleLeftPanel\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleLeftPanel\"), _class.prototype)), _class));\nconst menuStore = new MenuStore();\nexport default menuStore;\nexport { MenuStore };","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/news/news/stores/menu-store.js"],"names":["observable","computed","action","MenuStore","constructor","show","isOpenLeftPanel","toggleLeftPanel","console","log","menuStore"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;IAEMC,S,WAWHD,MAAM,CAAC,mBAAD,C,qBAXT,MAAMC,SAAN,CAAgB;AAGdC,EAAAA,WAAW,GAAG;AAAA;;AACZ,SAAKC,IAAL,GAAY,IAAZ;AACD;;AAED,MAAcC,eAAd,GAAgC;AAC9B,WAAO,KAAKD,IAAZ;AACD;;AAGDE,EAAAA,eADA,GACkB;AAChB,SAAKF,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,IAAjB;AACD;;AAfa,C,8EACbL,U;;;;;oEAMAC,Q;AAWH,MAAMS,SAAS,GAAG,IAAIP,SAAJ,EAAlB;AAEA,eAAeO,SAAf;AACA,SAASP,SAAT","sourcesContent":["import { observable, computed, action } from 'mobx';\r\n\r\nclass MenuStore {\r\n  @observable show;\r\n\r\n  constructor() {\r\n    this.show = true;\r\n  }\r\n\r\n  @computed get isOpenLeftPanel() {\r\n    return this.show;\r\n  }\r\n\r\n  @action('toggle left panel')\r\n  toggleLeftPanel() {\r\n    this.show = !this.show;\r\n    console.log(this.show);\r\n  }\r\n}\r\n\r\nconst menuStore = new MenuStore();\r\n\r\nexport default menuStore;\r\nexport { MenuStore };"]},"metadata":{},"sourceType":"module"}