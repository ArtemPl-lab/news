{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { makeAutoObservable } from \"mobx\";\n\nvar PostsStore = /*#__PURE__*/function () {\n  function PostsStore() {\n    _classCallCheck(this, PostsStore);\n\n    _defineProperty(this, \"posts\", [{\n      url: 'url-1',\n      date: 'September 14, 2016',\n      title: 'Название',\n      text: 'Бла-бла-бла'\n    }, {\n      url: 'url-2',\n      date: 'September 14, 2016',\n      title: 'Названdffffffffие',\n      text: 'Бла-dsfgdfgбла-бла'\n    }, {\n      url: 'url-5',\n      date: 'September 14, 2016',\n      title: 'Названиеusjgnjdfsn',\n      text: 'Бла-бла-блsdsfgа'\n    }]);\n\n    _defineProperty(this, \"page\", 1);\n\n    makeAutoObservable(this);\n  }\n\n  _createClass(PostsStore, [{\n    key: \"loadPosts\",\n    value: function () {\n      var _loadPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/api/news/news', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    page: this.page\n                  })\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                this.posts.push(json);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadPosts() {\n        return _loadPosts.apply(this, arguments);\n      }\n\n      return loadPosts;\n    }()\n  }]);\n\n  return PostsStore;\n}();\n\nvar postsStore = new PostsStore();\nexport default postsStore;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/news/news/stores/posts-store.js"],"names":["makeAutoObservable","PostsStore","url","date","title","text","fetch","method","body","JSON","stringify","page","response","json","posts","push","postsStore"],"mappings":";;;;;AAAA,SAASA,kBAAT,QAAmC,MAAnC;;IACMC,U;AAsBJ,wBAAc;AAAA;;AAAA,mCArBN,CACN;AACIC,MAAAA,GAAG,EAAE,OADT;AAEIC,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,KAAK,EAAE,UAHX;AAIIC,MAAAA,IAAI,EAAE;AAJV,KADM,EAON;AACIH,MAAAA,GAAG,EAAE,OADT;AAEIC,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,KAAK,EAAE,mBAHX;AAIIC,MAAAA,IAAI,EAAE;AAJV,KAPM,EAaN;AACIH,MAAAA,GAAG,EAAE,OADT;AAEIC,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,KAAK,EAAE,oBAHX;AAIIC,MAAAA,IAAI,EAAE;AAJV,KAbM,CAqBM;;AAAA,kCADP,CACO;;AACZL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;;;;;;;;;;;uBAEwBM,KAAK,CAAC,gBAAD,EAAkB;AAC1CC,kBAAAA,MAAM,EAAE,MADkC;AAE1CC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,oBAAAA,IAAI,EAAE,KAAKA;AADM,mBAAf;AAFoC,iBAAlB,C;;;AAAtBC,gBAAAA,Q;;uBAMaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACN,qBAAKC,KAAL,CAAWC,IAAX,CAAgBF,IAAhB;;;;;;;;;;;;;;;;;;;;;AAGJ,IAAMG,UAAU,GAAG,IAAIf,UAAJ,EAAnB;AACA,eAAee,UAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\"\r\nclass PostsStore {\r\n  posts = [\r\n    {\r\n        url: 'url-1',\r\n        date: 'September 14, 2016',\r\n        title: 'Название',\r\n        text: 'Бла-бла-бла'\r\n    },\r\n    {\r\n        url: 'url-2',\r\n        date: 'September 14, 2016',\r\n        title: 'Названdffffffffие',\r\n        text: 'Бла-dsfgdfgбла-бла'\r\n    },\r\n    {\r\n        url: 'url-5',\r\n        date: 'September 14, 2016',\r\n        title: 'Названиеusjgnjdfsn',\r\n        text: 'Бла-бла-блsdsfgа'\r\n    }\r\n  ];\r\n  page = 1;\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n  async loadPosts(){\r\n    const response = await fetch('/api/news/news',{\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            page: this.page\r\n        })\r\n    });\r\n    const json = await response.json();\r\n    this.posts.push(json);\r\n  }\r\n}\r\nconst postsStore = new PostsStore();\r\nexport default postsStore;"]},"metadata":{},"sourceType":"module"}