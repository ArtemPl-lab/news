{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeAutoObservable } from \"mobx\";\n\nclass PostsStore {\n  constructor() {\n    _defineProperty(this, \"posts\", []);\n\n    _defineProperty(this, \"page\", 1);\n\n    makeAutoObservable(this);\n  }\n\n  async loadPosts() {\n    const response = await fetch('/api/news/news', {\n      method: 'POST',\n      body: JSON.stringify({\n        page: this.page\n      })\n    });\n    const json = await response.json();\n    let concatPosts = this.posts.concat(json);\n    this.posts = [...new Set(concatPosts.map(JSON.stringify))].map(JSON.parse);\n  }\n\n}\n\nconst postsStore = new PostsStore();\nexport default postsStore;","map":null,"metadata":{},"sourceType":"module"}