{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { makeAutoObservable } from \"mobx\";\n\nvar PostsStore = /*#__PURE__*/function () {\n  function PostsStore() {\n    _classCallCheck(this, PostsStore);\n\n    _defineProperty(this, \"posts\", []);\n\n    _defineProperty(this, \"page\", 1);\n\n    makeAutoObservable(this);\n  }\n\n  _createClass(PostsStore, [{\n    key: \"getPosts\",\n    value: function getPosts() {\n      return this.posts;\n    }\n  }, {\n    key: \"loadPosts\",\n    value: function () {\n      var _loadPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, json, concatPosts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/api/news/news', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    page: this.page\n                  })\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                concatPosts = this.posts.concat(json);\n                this.posts = _toConsumableArray(new Set(concatPosts.map(JSON.stringify))).map(JSON.parse);\n                this.page++;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadPosts() {\n        return _loadPosts.apply(this, arguments);\n      }\n\n      return loadPosts;\n    }()\n  }]);\n\n  return PostsStore;\n}();\n\nvar postsStore = new PostsStore();\nexport default postsStore;","map":null,"metadata":{},"sourceType":"module"}