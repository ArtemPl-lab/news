{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\news\\\\news\\\\pages\\\\about.js\";\nimport { useState } from \"react\";\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nexport default (() => {\n  var client = new W3CWebSocket('ws://localhost:5001/', 'echo-protocol');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('Старт');\n\n  client.onerror = function () {\n    setMessage('Connection Error');\n  };\n\n  client.onopen = function () {\n    setMessage('WebSocket Client Connected'); // function sendNumber() {\n    //     if (client.readyState === client.OPEN) {\n    //         var number = Math.round(Math.random() * 0xFFFFFF);\n    //         client.send(number.toString());\n    //         setTimeout(sendNumber, 1000);\n    //     }\n    // }\n    // sendNumber();\n  };\n\n  client.onclose = function () {\n    setMessage('echo-protocol Client Closed');\n  };\n\n  client.onmessage = function (e) {\n    if (typeof e.data === 'string') {\n      setMessage(\"Received: '\" + e.data + \"'\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/news/news/pages/about.js"],"names":["useState","W3CWebSocket","require","w3cwebsocket","client","message","setMessage","onerror","onopen","onclose","onmessage","e","data"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,YAAxC;;AAGA,gBAAgB,MAAM;AAClB,MAAIC,MAAM,GAAG,IAAIH,YAAJ,CAAiB,sBAAjB,EAAyC,eAAzC,CAAb;AACA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,OAAD,CAAtC;;AACAI,EAAAA,MAAM,CAACG,OAAP,GAAiB,YAAW;AACxBD,IAAAA,UAAU,CAAC,kBAAD,CAAV;AACH,GAFD;;AAIAF,EAAAA,MAAM,CAACI,MAAP,GAAgB,YAAW;AACvBF,IAAAA,UAAU,CAAC,4BAAD,CAAV,CADuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXD;;AAaAF,EAAAA,MAAM,CAACK,OAAP,GAAiB,YAAW;AACxBH,IAAAA,UAAU,CAAC,6BAAD,CAAV;AACH,GAFD;;AAIAF,EAAAA,MAAM,CAACM,SAAP,GAAmB,UAASC,CAAT,EAAY;AAC3B,QAAI,OAAOA,CAAC,CAACC,IAAT,KAAkB,QAAtB,EAAgC;AAC5BN,MAAAA,UAAU,CAAC,gBAAgBK,CAAC,CAACC,IAAlB,GAAyB,GAA1B,CAAV;AACH;AACJ,GAJD;;AAKA,sBACI;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD","sourcesContent":["import { useState } from \"react\";\r\n\r\nvar W3CWebSocket = require('websocket').w3cwebsocket;\r\n\r\n\r\nexport default  () => {\r\n    var client = new W3CWebSocket('ws://localhost:5001/', 'echo-protocol');\r\n    const [message, setMessage] = useState('Старт');\r\n    client.onerror = function() {\r\n        setMessage('Connection Error');\r\n    };\r\n     \r\n    client.onopen = function() {\r\n        setMessage('WebSocket Client Connected');\r\n     \r\n        // function sendNumber() {\r\n        //     if (client.readyState === client.OPEN) {\r\n        //         var number = Math.round(Math.random() * 0xFFFFFF);\r\n        //         client.send(number.toString());\r\n        //         setTimeout(sendNumber, 1000);\r\n        //     }\r\n        // }\r\n        // sendNumber();\r\n    };\r\n     \r\n    client.onclose = function() {\r\n        setMessage('echo-protocol Client Closed');\r\n    };\r\n     \r\n    client.onmessage = function(e) {\r\n        if (typeof e.data === 'string') {\r\n            setMessage(\"Received: '\" + e.data + \"'\");\r\n        }\r\n    };\r\n    return(\r\n        <div>\r\n            {message}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}