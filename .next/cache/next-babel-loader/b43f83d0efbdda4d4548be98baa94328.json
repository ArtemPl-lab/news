{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Container } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar PostPage = function PostPage() {\n  var router = useRouter();\n  console.log(router.query.query);\n\n  var _useState = useState(),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/api/news/search', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n              },\n              body: JSON.stringify({\n                newsTitle: router.query.query\n              })\n            });\n\n          case 2:\n            response = _context.sent;\n            console.log(router.query.query);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [router.query.query]);\n  if (!posts) return /*#__PURE__*/_jsx(CircularProgress, {});\n  return /*#__PURE__*/_jsx(Container, {});\n};\n\nexport default PostPage;","map":null,"metadata":{},"sourceType":"module"}