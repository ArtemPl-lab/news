{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Container } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { observer } from 'mobx-react';\nimport { useStore } from \"mobx-store-provider\";\nimport Head from 'next/head';\nimport { useRef } from 'react';\n\nconst PostPage = ({\n  post\n}) => {\n  const router = useRouter();\n  const ref = useRef(null);\n  const {\n    postsStore\n  } = useStore();\n  const postContent = postsStore.posts.find(post => post.newsUrl === router.query.url) || post;\n  if (!postContent) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430\"\n  });\n  ref.current = postContent.newsContent;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: postContent.newsTitle\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: postContent.newsContent\n      })]\n    }), /*#__PURE__*/_jsxs(Container, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: postContent.newsTitle\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: postContent.date\n      }), /*#__PURE__*/_jsx(\"p\", {\n        ref: ref\n      })]\n    })]\n  });\n};\n\nexport async function getServerSideProps(context) {\n  // Fetch data from external API\n  const res = await fetch('http://localhost:5000/api/news/page', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({\n      id: context.query.url\n    })\n  });\n  const data = await res.json();\n  console.log(data); // Pass data to the page via props\n\n  return {\n    props: {\n      post: data\n    }\n  };\n}\nexport default observer(PostPage);","map":null,"metadata":{},"sourceType":"module"}