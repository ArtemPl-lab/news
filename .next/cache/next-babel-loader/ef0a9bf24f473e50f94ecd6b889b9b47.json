{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useStore } from 'mobx-store-provider';\nimport { useRouter } from 'next/router';\nimport { observer } from 'mobx-react';\nimport useCookie from 'react-use-cookie';\nimport AdminForm from '../components/adminForm';\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxs(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: ['Copyright © ', /*#__PURE__*/_jsx(Link, {\n      color: \"inherit\",\n      href: \"https://material-ui.com/\",\n      children: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438.\\u0440\\u0443\"\n    }), ' ', new Date().getFullYear(), '.']\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default observer(function SignIn() {\n  const classes = useStyles();\n  const {\n    user\n  } = useStore();\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    name: '',\n    password: ''\n  });\n  const [userToken, setUserToken] = useCookie('token');\n  const router = useRouter();\n\n  const handleChange = e => {\n    console.log(e.target.name);\n    setFormValues(state => _objectSpread(_objectSpread({}, state), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        login: formValues.name,\n        password: formValues.password\n      })\n    });\n    const json = await response.json();\n\n    if (json.token) {\n      setUserToken(json.token);\n      user.setToken(json.token);\n    }\n  };\n\n  if (user.userToken) router.push('/');\n  return /*#__PURE__*/_jsx(AdminForm, {}) // <Container component=\"main\" maxWidth=\"xs\">\n  //   <CssBaseline />\n  //   <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n  //       <LockOutlinedIcon />\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Авторизация\n  //     </Typography>\n  //     <form className={classes.form} noValidate onSubmit={onSubmit}>\n  //       <TextField\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         id=\"name\"\n  //         label=\"Имя пользователя\"\n  //         name=\"name\"\n  //         autoComplete=\"off\"\n  //         autoFocus\n  //         value={formValues.name}\n  //         onChange={handleChange}\n  //       />\n  //       <TextField\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         name=\"password\"\n  //         label=\"Пароль\"\n  //         type=\"password\"\n  //         id=\"password\"\n  //         autoComplete=\"off\"\n  //         value={formValues.password}\n  //         onChange={handleChange}\n  //       />\n  //       <FormControlLabel\n  //         control={<Checkbox value=\"remember\" color=\"primary\" />}\n  //         label=\"Запомнить меня\"\n  //       />\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //       >\n  //         Войти\n  //       </Button>\n  //     </form>\n  //   </div>\n  //   <Box mt={8}>\n  //     <Copyright />\n  //   </Box>\n  // </Container>\n  ;\n});","map":null,"metadata":{},"sourceType":"module"}