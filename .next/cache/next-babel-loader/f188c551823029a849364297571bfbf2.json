{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\news\\\\news\\\\pages\\\\about.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default _s(function () {\n  _s();\n\n  var socket = new WebSocket(\"ws://localhost:5001\");\n\n  var _useState = useState('Старт'),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  socket.onopen = function () {\n    setMessage(\"Соединение установлено.\");\n  };\n\n  socket.onclose = function (event) {\n    if (event.wasClean) {\n      setMessage('Соединение закрыто чисто');\n    } else {\n      setMessage('Обрыв соединения'); // например, \"убит\" процесс сервера\n    }\n\n    setMessage('Код: ' + event.code + ' причина: ' + event.reason);\n  };\n\n  socket.onmessage = function (event) {\n    setMessage(\"Получены данные \" + event.data);\n  };\n\n  socket.onerror = function (error) {\n    setMessage(\"Ошибка \" + error.message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n}, \"UgpNilMtIlCr3S7W5l41ZW1FTvM=\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Рабочий стол/news/news/pages/about.js"],"names":["useState","socket","WebSocket","message","setMessage","onopen","onclose","event","wasClean","code","reason","onmessage","data","onerror","error"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,kBAAgB,YAAM;AAAA;;AAClB,MAAIC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAb;;AADkB,kBAEYF,QAAQ,CAAC,OAAD,CAFpB;AAAA,MAEXG,OAFW;AAAA,MAEFC,UAFE;;AAGlBH,EAAAA,MAAM,CAACI,MAAP,GAAgB,YAAW;AACvBD,IAAAA,UAAU,CAAC,yBAAD,CAAV;AACD,GAFH;;AAIEH,EAAAA,MAAM,CAACK,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAChBJ,MAAAA,UAAU,CAAC,0BAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,kBAAD,CAAV,CADG,CAC6B;AACnC;;AACDA,IAAAA,UAAU,CAAC,UAAUG,KAAK,CAACE,IAAhB,GAAuB,YAAvB,GAAsCF,KAAK,CAACG,MAA7C,CAAV;AACD,GAPD;;AASAT,EAAAA,MAAM,CAACU,SAAP,GAAmB,UAASJ,KAAT,EAAgB;AACjCH,IAAAA,UAAU,CAAC,qBAAqBG,KAAK,CAACK,IAA5B,CAAV;AACD,GAFD;;AAIAX,EAAAA,MAAM,CAACY,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/BV,IAAAA,UAAU,CAAC,YAAYU,KAAK,CAACX,OAAnB,CAAV;AACD,GAFD;;AAGF,sBACI;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CA5BD","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default  () => {\r\n    var socket = new WebSocket(\"ws://localhost:5001\");\r\n    const [message, setMessage] = useState('Старт');\r\n    socket.onopen = function() {\r\n        setMessage(\"Соединение установлено.\");\r\n      };\r\n      \r\n      socket.onclose = function(event) {\r\n        if (event.wasClean) {\r\n            setMessage('Соединение закрыто чисто');\r\n        } else {\r\n            setMessage('Обрыв соединения'); // например, \"убит\" процесс сервера\r\n        }\r\n        setMessage('Код: ' + event.code + ' причина: ' + event.reason);\r\n      };\r\n      \r\n      socket.onmessage = function(event) {\r\n        setMessage(\"Получены данные \" + event.data);\r\n      };\r\n      \r\n      socket.onerror = function(error) {\r\n        setMessage(\"Ошибка \" + error.message);\r\n      };\r\n    return(\r\n        <div>\r\n            {message}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}